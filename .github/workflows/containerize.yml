name: Containerize

on:
  push:
  workflow_dispatch:

env:
  GITHUB_USERNAME: baronfel
  GITHUB_TOKEN: ${{ secrets.CONTAINER_PUSH_PAT }}

jobs:

  azure:
    name: Azure Container Registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2

      - name: Log in to container registry
        uses: azure/docker-login@v1
        with:
          login-server: sdkcontainerdemo.azurecr.io
          username: sdkcontainerdemo
          password: ${{ secrets.ACR_PAT }}

      - name: Publish
        run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=azure

  github:
    name: GitHub Package Registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2

      - name: Log in to container registry
        uses: azure/docker-login@v1
        with:
          login-server: ghcr.io
          username: baronfel
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=github

  aws:
    name: AWS Elastic Container Registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Publish
        run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=aws

  gitlab:
    name: GitLab Container Registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2

      - name: Log in to container registry
        uses: azure/docker-login@v1
        with:
          login-server: registry.gitlab.com
          username: chet.husk
          password: ${{ secrets.GITLAB_CONTAINER_PAT }}

      - name: Publish
        run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=gitlab

  gcp:
    name: Google Cloud Artifact Registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2

      # Setup gcloud CLI
      - uses: google-github-actions/auth@main
        with:
          credentials_json: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: gcloud auth configure-docker us-south1-docker.pkg.dev

      - name: Publish
        run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=gcp -bl

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: GCP.binlog
          path: msbuild.binlog

  localdocker:
    name: Local Docker Daemon
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2

      - name: Publish
        run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=localdocker -bl

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: localdocker.binlog
          path: msbuild.binlog

  localdocker-trimmedandchiseled:
    name: Local Docker Daemon, Chiseled Ubuntu container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2

      - name: Publish
        run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=localdocker-trimmedandchiseled -bl --self-contained true

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: localdocker-trimmedandchiseled.binlog
          path: msbuild.binlog

  dockerhub:
    name: Push to Docker hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2

      - name: Log in to container registry
        uses: azure/docker-login@v1
        with:
          login-server: registry-1.docker.io
          username: chusk3
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Publish
        run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=dockerhub -bl

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: dockerhub.binlog
          path: msbuild.binlog