name: AOT Example

on:
  push:
  workflow_dispatch:

env:
  GITHUB_USERNAME: baronfel
  # GITHUB_TOKEN: ${{ secrets.CONTAINER_PUSH_PAT }}


jobs:
  aot:
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        sdkflavor: [alpine-aot, jammy-aot]
        arch: [amd64, arm64v8]
        include:
        - sdkflavor: jammy-aot
          runtimeflavor: jammy-chiseled
        - sdkflavor: alpine-aot
          runtimeflavor: alpine

    name: "${{ matrix.sdkflavor }}-${{ matrix.arch }} => ${{ matrix.runtimeflavor }}-${{ matrix.arch }}"
    runs-on: ubuntu-latest
    steps:
    - name: Login to ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Docker Buildx
      if: matrix.arch != 'amd64'
      uses: docker/setup-buildx-action@v2
    - name: Set up QEMU
      if: matrix.arch != 'amd64'
      uses: docker/setup-qemu-action@v2
      with:
        platforms: 'arm64,arm'
    - name: Get the code
      uses: actions/checkout@v2
    - name: build the app AOT-style
      run: |
        docker run --rm --pull=always \
          -v $(pwd)/src:/src \
          -v ~/.docker/config.json:/root/.docker/config.json:ro \
          -w /src/aot-sample \
          mcr.microsoft.com/dotnet/nightly/sdk:8.0-${{ matrix.sdkflavor }}-${{matrix.arch}} \
          sh -c "
            dotnet publish /t:PublishContainer \
              -p ContainerBaseImage=mcr.microsoft.com/dotnet/runtime-deps:8.0-${{matrix.runtimeflavor}}-${{matrix.arch}} \
              -p ContainerRegistry=ghcr.io \
              -p ContainerRepository=${{ github.repository_owner }}/aot-sample \
              -p ContainerImageTag=${{matrix.runtimeflavor}}-${{matrix.arch}} \
          "
    - name: run the just-built container
      run: |
          docker run --rm ghcr.io/${{github.repository_owner}}/aot-sample:${{matrix.runtimeflavor}}-${{matrix.arch}}
    - name: inspect the just-built container
      run: |
        docker history ghcr.io/${{github.repository_owner}}/aot-sample:${{matrix.runtimeflavor}}-${{matrix.arch}} --format "{{.ID}}: {{.Size}}"

  create-manifest-list:
    name: Create Manifest List for aot-sample
    needs: [aot]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Login to ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: create manifest
      run: |
        docker manifest create ghcr.io/${{github.repository_owner}}/aot-sample:latest \
          ghcr.io/${{github.repository_owner}}/aot-sample:jammy-chiseled-amd64 \
          ghcr.io/${{github.repository_owner}}/aot-sample:jammy-chiseled-arm64v8 \
          ghcr.io/${{github.repository_owner}}/aot-sample:alpine-amd64 \
          ghcr.io/${{github.repository_owner}}/aot-sample:alpine-arm64v8

        docker manifest push ghcr.io/${{github.repository_owner}}/aot-sample:latest
