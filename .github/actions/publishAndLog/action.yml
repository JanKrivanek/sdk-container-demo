name: 'Hello World'
description: 'Greet someone'
inputs:
    profile:
      required: true
      description: "The name of the publish profile to use. Must match the name (without extension) of a publish profile in the Properties/PublishProfiles folder of the project."
    variant:
      required: false
      default: "default"
      description: "The 'variant' of the build to be run - this is used when testing different auth modes for the same publish profile, for example."
    selfContained:
      default: "[true, false]"
      required: false
      description: "The values of self-contained to test this variant with. Some variants don't work with SC/FDD builds, so use this to control which ones are tested. Valid values are 'true', 'false', or '[true, false]' to test both."
    chunked:
      default: "[true, false]"
      required: false
      description: "Determines if the upload will be done with chunked or atomic uploads. Defaults to testing both. Values are 'true', 'false', or '[true, false]' to test both."

runs:
  using: "composite"
  steps:
    - name: Publish self contained, atomic
      shell: pwsh
      if: ${{ contains(fromJson(inputs.selfContained), true) }} && ${{ contains(fromJson(inputs.chunked), false) }} && always()
      run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=${{ inputs.profile }} --self-contained true -p VersionSuffix=${{ inputs.variant }}-sc-atomic /bl
      env:
        SDK_CONTAINER_DEBUG_REGISTRY_FORCE_CHUNKED_UPLOAD: 'false'

    - name: Archive binlog self-contained, atomic
      uses: actions/upload-artifact@v3
      if: ${{ contains(fromJson(inputs.selfContained), true) }} && ${{ contains(fromJson(inputs.chunked), false) }} && always()
      with:
          name: ${{ inputs.profile}}-${{ inputs.variant }}-sc-atomic.binlog
          path: msbuild.binlog

    - name: Publish framework dependent, atomic
      shell: pwsh
      if: ${{ contains(fromJson(inputs.selfContained), false) }} && ${{ contains(fromJson(inputs.chunked), false) }} && always()
      run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=${{ inputs.profile }} --self-contained false -p VersionSuffix=${{ inputs.variant }}-fdd-atomic /bl
      env:
        SDK_CONTAINER_DEBUG_REGISTRY_FORCE_CHUNKED_UPLOAD: 'false'

    - name: Archive binlog self-contained, atomic
      uses: actions/upload-artifact@v3
      if: ${{ contains(fromJson(inputs.selfContained), false) }} && ${{ contains(fromJson(inputs.chunked), false) }} && always()
      with:
          name: ${{ inputs.profile}}-${{ inputs.variant }}-fdd-atomic.binlog
          path: msbuild.binlog

    - name: Publish self contained, chunked
      shell: pwsh
      if: ${{ contains(fromJson(inputs.selfContained), true) }} && ${{ contains(fromJson(inputs.chunked), true) }} && always()
      run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=${{ inputs.profile }} --self-contained true -p VersionSuffix=${{ inputs.variant }}-sc-chunked /bl
      env:
        SDK_CONTAINER_DEBUG_REGISTRY_FORCE_CHUNKED_UPLOAD: 'true'

    - name: Archive binlog self-contained, chunked
      uses: actions/upload-artifact@v3
      if: ${{ contains(fromJson(inputs.selfContained), true) }} && ${{ contains(fromJson(inputs.chunked), true) }} && always()
      with:
          name: ${{ inputs.profile}}-${{ inputs.variant }}-sc-chunked.binlog
          path: msbuild.binlog

    - name: Publish framework dependent, chunked
      shell: pwsh
      if: ${{ contains(fromJson(inputs.selfContained), false) }} && ${{ contains(fromJson(inputs.chunked), true) }} && always()
      run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=${{ inputs.profile }} --self-contained false -p VersionSuffix=${{ inputs.variant }}-fdd-chunked /bl
      env:
        SDK_CONTAINER_DEBUG_REGISTRY_FORCE_CHUNKED_UPLOAD: 'true'

    - name: Archive binlog self-contained, chunked
      uses: actions/upload-artifact@v3
      if: ${{ contains(fromJson(inputs.selfContained), false) }} && ${{ contains(fromJson(inputs.chunked), true) }} && always()
      with:
          name: ${{ inputs.profile}}-${{ inputs.variant }}-fdd-chunked.binlog
          path: msbuild.binlog